name: CodeInterpreter
description: |
    This AI agent is designed to execute python code reliably and efficiently. 
    It has a built-in python interpreter that allows it to read, analyze and execute any valid python script.
    This agent does not store instructions between calls, so you need to provide a complete code file to execute.

     ##Important
     - You should alway send a full code to execute.
     - You should always specify your requirements otherwise the code will fail.     
instructions: 
input_parameters: 
     - name: input
       is_required: True
       default_value: ""
       description: |
          The python code to execute. 
          Make sure you follow the correct Python code syntax before submitting it.

          Do not add requirement installations here; those requirements are supposed to be in ``requirements`` input parameters.
          
          If you expect me to send you a result, you should use ``print`` method to output your expectactions.

          ## Example
          ```
          x = 1
          y = 2.8
          z = 1j

          print(type(x))
          print(type(y))
          print(type(z))
          ```

          This code should be sended like this: 
          ```
          x = 1\r\ny = 2.8\r\nz = 1j\r\n\r\nprint(type(x))\r\nprint(type(y))\r\nprint(type(z))
          ```
          
          ## Tips
          - When you have to generate files as output, be sure to write it to ``/var/app/output/`` directory, this directory is bind to the current directory, so ommit this path when trying to access to it.
          - When you provide input files they are binded into ``/var/app/inputs`` directory, so in your code you should use this base path to access to it. 
          - Do not provide a relative path, always use full path.
          - When you need to search on Google using REST API, you can use ``GOOGLE_SEARCH_API_KEY`` and ``GOOGLE_SEARCH_ENGINE_ID`` environment variables.

     - name: requirements
       is_required: False
       default_value: ""
       description: |
          The contents of the Python requirements file to be used.
          These requirements will be added to the ``requirements.txt`` file in the sandbox by the CodeInterpreter. 

          ## Example
          ```
          requests
          tensorflow
          uvicorn
          fastapi==0.63.0
          ```
     - name: bindings
       is_required: False
       default_value: ""
       description: |
          The list of input files to bind to the code.
          These files will be linked to the `/var/app/inputs/`` directory in the sandbox. So, when they are linked, they should be used directly in ``/var/app/inputs/``, omitting their relative path.          
          This list should be provided as a json document, and each item should be represented as a bind string.
          
          ## Example
          ```json
          [
                "<Full_File_Path>:/var/app/inputs/<File name>:ro",
                "/home/user/myFile.xls:/var/app/inputs/myFile.xls:rw"
          ]
          ```
execution_settings:
  planner: Handlebars
  handlebar_settings: 
      fixed_plan: |
        {{json (code-ExecutePythonCode)}}  
  prompt_settings: 
    temperature: 0.0
    top_p: 1
    max_tokens: 4096